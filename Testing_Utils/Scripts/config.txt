
# Honored database substitutions used as {Y}{MILLI}{PRODUCT}
#	Y: 4 digit year
#	m: 2 digit month
#	b: 3 character month (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)
#	d: 2 digit day
#	y: 2 digit year
#	j: 3 digit day of year
#	H: 2 digit hour (24-hour time)
#	M: 2 digit minute
#	S: 2 digit second
#	MILLI: 3 digit millisecond
#	MICRO: 3 digit microsecond
#	QACODE: the QA code (ok|ignore|problem)
#	VERSION: version string, interface.quality.revision
#	DATE: the UTC date from a file, same as Ymd
#	MISSION: the mission name from the db
#	SPACECRAFT: the spacecraft name from the db
#	PRODUCT: the product name from the db


##########################
# MANUAL
#
# Loops over the configuration file and if the DB does not have the mission,
# satellit, instrument entries present they are added, skipped otherwise.
# the Product and process entries must be unique and not present.
#
# THERE IS CURRENTLY NO UPDATE IN THE DB BASED ON THIS CONFIG SCRIPT


##################
# Required elements
#
# [mission]  <- once and only once with
#   rootdir  (string)
#   mission_name  (string)
#   incoming_dir  (string)
# [satellite] <- once and only once with
#   satellite_name  (string)
# [instrument] <- once and only once with
#   instrument_name  (string)
##### products and inspector are defined together since they are a one-to-one
# [product] <- multiple entries each starting with "product" then a unique identifer
#   product_name  (string)
#   relative_path  (string)
#   level  (float)
#   format  (string)
#   product_description (string)
#   inspector_filename (string)
#   inspector_relative_path (string)
#   inspector_description (string)
#   inspector_version (version e.g. 1.0.0)
#   inspector_output_interface (integer)
#   inspector_active (Boolean e.g. True or 1 or False or 0)
#   inspector_date_written (date e.g. 2013-07-12)
#   inspector_newest_version  (Boolean e.g. True or 1 or False or 0)
#   inspector_arguments (string)
#### processes and codes operate on the names of the products, they can be in
#### this config file or already in the db codes are one-to-one with processes
# [process] <- multiple entries each starting with "process" then a unique identifer
#   process_name (string)
#   output_product (string)  - identifer from section heading
#   output_timebase  (string, FILE/DAILY/WEEKLY/MONTHLY/YEARLY)
#   extra_params (string)
## A collection of input names entered as such
## the required portion is "optional_input" or "required_input" then some
## unique identifer on the end
#   optional_input1  (string) name of product - identifer from section heading
#   optional_input2  (string) name of product - identifer from section heading
#   optional_input3  (string) name of product - identifer from section heading
#   required_input1  (string) name of product - identifer from section heading
#   required_input2  (string) name of product - identifer from section heading
#   required_input3  (string) name of product - identifer from section heading
## code is entered as part of process
#   code_filename (string)
#   code_relative_path (string)
#   code_start_date (date, 2000-01-01)
#   code_stop_date  (date, 2050-12-31)
#   code_description (string)
#   code_version  (version e.g. 1.0.0)
#   code_output_interface  (integer)
#   code_active (Boolean e.g. True or 1 or False or 0)
#   code_date_written   (date, 2050-12-31)
#   code_newest_version (Boolean e.g. True or 1 or False or 0)
#   code_arguments (string)


[mission]
rootdir = [[BASE_DIR]]/[[MISSION_DIR]]
mission_name = [[MISSION_DIR]]
incoming_dir = incoming

[satellite]
satellite_name = {MISSION}a

[instrument]
instrument_name = inst1

[product_L0]
product_name = testing_L0
relative_path = L0
level = 0.0
format = Test-Test_R0_evinst_{DATE}_v{VERSION}.txt
product_description = {MISSION} inst1 L0 product
inspector_filename = testing_L0_V1.0.0.py
inspector_relative_path = codes/inspectors
inspector_description = {MISSION} inst1 L0 product
inspector_version = 1.0.0
inspector_output_interface = 1
inspector_active = True
inspector_date_written = 2013-07-09
inspector_newest_version = True
inspector_arguments = sc={SPACECRAFT}

#[process_hk_l05-l1]
#process_name = repta_hk_l05_l1
#output_product = product_l1hk
#output_timebase = DAILY
#extra_params = None
#required_input1 = product_l1hk
#code_filename = l05_to_l1.py
#code_relative_path = codes/rept
#code_start_date = 2000-01-01
#code_stop_date = 2050-12-31
#code_description = processing code for L05 to L1
#code_version = 1.0.0
#code_output_interface = 1
#code_active = True
#code_date_written = 2013-07-04
#code_newest_version = True
#code_arguments = None




