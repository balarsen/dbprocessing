scripts notes from brian:

addFromConfig.py: key
addVerboseProvenance.py: never worked
clearProcessingFlag.py: key
configFromDB.py: used to work, super-convenient
coveragePlot.py: works, but has some bugs. Doesn't catch most recent files reliably or somtehing. But see note on htmlCoverage
CreateDB.py: key
dataToIncoming.py: concept, never actually used. supposed to be one script + config file, but we wound up using separate scripts for everything
dbOnlyFiles.py: supposed to show files in db but not on disk, but not in use
DBRunner.py: really useful. Give Db, process, date range, and runs them into the current directory. "dumb runner"
deleteAllDBFiles.py: does what it sounds, sorta useful
deleteAllDBProducts.py: ditto
deleteDBFile.py: usable, deletes single file from db (also from disk?), relatively common
deleteFromDBifNotOnDisk.py: says on tin, probably not ued
flushProcessQueue.py: key
histogramCodes.py: may or may not still work, read logs to find out what codes take a long time to run
hopeCoverageHTML.py: delete
hope_query.py: delete
htmlCoverage.py: either this or coveragePlot works, not both.
link_missing_ql_mag_l2_mag.py: QL "required,", L2 "optional". We don't support "either or but prefer this one", so this links them together and the wrapper handles the actual priority
magephem_dataToIncoming.py: what it says on tin
magephem_def_dataToIncoming.py: what it says on tin
magephem-pre-CoverageHTML.py: probably works
makeLatestSymlinks.py: highest file version, makes symlinks into file dir
missingFilesByProduct.py: attempt to reprocess files that are missing, 90% solution, not used much, but did work
missingFiles.py: prints out what's missing, based on noncontiguous date ranges, maybe works, maybe not
possibleProblemDates.py: a database scrub/validation routine, useful but sharp edges
printInfo.py: key, table of info about files or products or processes
printProcessQueue.py: does that, kinda useful
processQueueHTML.py: probably broken, same thing, but HTML, merge these?
ProcessQueue.py: the main thing
purgeFileFromDB.py: different than delete how? This might be the one to use. purge deletes it and everything that depends on it. delete might not, which might leave loose ends.
QCEmailer_conf.txt: quality control loop stuff
README.txt: whatever
reprocessByAll.py: should work, probably doesn't
reprocessByCode.py: ""
reprocessByDate.py: This code works and is likely the one that shoulod be used most of the time for reprocessing files.
reprocessByInstrument.py: ""
reprocessByProduct.py: does work, used all the time, beaten it to a pulp to make it work but haven't done that on the others
updateCode.py: new version of code, rerun based on that, better done through config files (although can't be done that way) and then run reprocessByCode
updateProducts.py: probably broken
updateSHAsum.py: meant to update database with new shasum if file has changed and want to keep it there
weeklyReport.py: unused, probably broken, delete
writeDBhtml.py: ""
writeProcessConf.py: probably not used
writeProductsConf.py: probably not used
